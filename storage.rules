rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Employee document paths
    match /employees/{phoneNumber}/{documentType}/{fileName} {
      
      // Allow write (create & update) if:
      // 1. The user is an authenticated admin (has an email in their token).
      // OR
      // 2. The user is an employee verified via OTP, their phone number matches the path, and they are uploading valid files.
      allow write: if (request.auth != null && request.auth.token.email != null) ||
                     (request.auth != null && request.auth.token.phone_number == '+91' + phoneNumber &&
                      documentType in ['profilePictures', 'idProofs', 'addressProofs', 'signatures', 'bankDocuments', 'policeCertificates'] &&
                      request.resource.size < 5 * 1024 * 1024 &&
                      (request.resource.contentType.matches('image/.*') || request.resource.contentType == 'application/pdf'));

      // Allow read/delete if the user is an admin.
      // Public users do not need read access via rules; they get URLs from Firestore.
      allow read, delete: if request.auth != null && request.auth.token.email != null;
    }

    // Default deny all other reads/writes to bucket paths.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
