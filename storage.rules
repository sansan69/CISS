rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Employee document paths are structured as: /employees/{phoneNumber}/{documentType}/{fileName}
    match /employees/{phoneNumber}/{documentType}/{fileName} {
      
      // --- WRITE (Create, Update) Rule ---
      // Allow write access under two conditions:
      // 1. The user is an authenticated admin (identified by having an email in their auth token).
      // OR
      // 2. The user is authenticated via phone, and their verified phone number matches the {phoneNumber} in the path.
      // This single condition securely handles both new public enrollments and existing employees updating their own documents.
      allow write: if (request.auth != null && (
                      (request.auth.token.email != null) ||
                      (request.auth.token.phone_number == '+91' + phoneNumber)
                    )) &&
                    // Enforce that uploads go into recognized document type folders.
                    documentType in ['profilePictures', 'idProofs', 'addressProofs', 'signatures', 'bankDocuments', 'policeCertificates'] &&
                    // Enforce file size and type constraints for all uploads.
                    request.resource.size < 5 * 1024 * 1024 &&
                    (request.resource.contentType.matches('image/.*') || request.resource.contentType == 'application/pdf');

      // --- READ and DELETE Rules ---
      // Only authenticated admins can read or delete files directly from storage.
      // Public users get download URLs from Firestore, which have their own security.
      allow read, delete: if request.auth != null && request.auth.token.email != null;
    }

    // Default deny all other reads/writes to any other path in the bucket.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
