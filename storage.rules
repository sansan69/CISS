rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Path for all employee-related documents.
    match /employees/{phoneNumber}/{documentType}/{fileName} {
      
      // Helper function for validation
      function isValidUpload() {
        return documentType in ['profilePictures', 'idProofs', 'addressProofs', 'signatures', 'bankDocuments', 'policeCertificates'] &&
               request.resource.size < 5 * 1024 * 1024 &&
               (request.resource.contentType.matches('image/.*') || request.resource.contentType == 'application/pdf');
      }

      // CREATE: Allow unauthenticated writes (for public enrollment) ONLY if the upload is valid.
      // This is safe because the path is specific and the file is validated.
      allow create: if request.auth == null && isValidUpload();

      // READ, UPDATE, DELETE:
      // Allow these actions only if the user is authenticated (admin or the employee themselves).
      allow read, update, delete: if request.auth != null &&
                                  (request.auth.token.email != null || request.auth.token.phone_number == '+91' + phoneNumber) &&
                                  isValidUpload();
    }

    // Default deny all other paths.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
